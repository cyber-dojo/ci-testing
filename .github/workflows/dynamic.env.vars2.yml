
name: Dynamic Env Vars

on:
  push:

jobs:
  export-env-vars:
    name: Exporting dynamic environment variables
    runs-on: ubuntu-latest
    outputs:
      ENV_VARS: ${{ steps.setMyEnv.outputs.ENV_VARS }}
    steps:
      - name: exporting
        id: setMyEnv
        run:
          echo 'ENV_VARS={"VAR_THE_FIRST":"Hello","VAR_THE_SECOND":"Hello again"}' >> ${GITHUB_OUTPUT}

  import-env-vars:
    name: Importing dynamic environment variables
    runs-on: ubuntu-latest
    needs: [export-env-vars]
    env:
      WRAPPED: ${{ toJson(needs.export-env-vars.outputs.ENV_VARS) }}
    steps:
      - name: Show
        run:
          echo "${{ env.WRAPPED }}"
        
#      - name: importing
#        id: vars
#        run: |
#          echo "${{ env.WRAPPED }}" > wrapped.json
#          jq -r 'keys[] as $k | "export \($k):\(.[$k])"' wrapped.json > build.args
#          echo ---
#          cat build.args
#          echo ---
#          #echo "build_args=$(cat build.args)" >> ${GITHUB_OUTPUT}
#          #          source build.args
#          #          env | grep VAR_THE
#          #echo "build_args=[VAR_THE_FIRST]" >> ${GITHUB_OUTPUT}
#          echo 'docker_build_with={"context":".","no-cache":true,"push":false,"tags":"cyberdojo/dev"}' >> ${GITHUB_OUTPUT}

      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Build and push Docker image to ECR
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context:  .
          no-cache: true
          push:     false
          tags:     cyberdojo/dynamic-env-vars
          #build-args: ${{ toJson(env.WRAPPED) }}

      - name: Go
        run:
          docker run --rm -i cyberdojo/dynamic-env-vars sh -c 'env | grep VAR_THE'