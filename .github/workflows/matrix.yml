name: Main

on:
  push:

jobs:

  setup:
    name: Generate Job Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix_include: ${{ steps.generate.outputs.matrix_include }}
    env:
      JSON: >-
        [
          {"incoming":{"service": "alpha"}, "outgoing":{"service": "xalpha"}},
          {"incoming":{"service": "beta" }, "outgoing":{"service": "xalpha"}}
        ]
    steps:
      - name: Generate matrix-include
        id: generate
        run: |
          jq . <<< "${JSON}"
          echo "matrix_include=$(jq -r -c . <<< "${JSON}")" >> ${GITHUB_OUTPUT}

  deploy:
    needs: [setup]
    name: Check
    runs-on: ubuntu-latest
    if: needs.setup.outputs.matrix_include != ''
    strategy:
      matrix:
        include: ${{ fromJSON(needs.setup.outputs.matrix_include) }}
    env:
      MATRIX:   ${{ toJSON(matrix) }}
      INCOMING: ${{ toJSON(fromJSON(toJSON(matrix)).incoming) }}
      OUTGOING: ${{ toJSON(fromJSON(toJSON(matrix)).outgoing) }}
    steps:
      - run: |
          echo matrix
          echo "${MATRIX}"
          echo incoming
          echo "${INCOMING}"
          echo outgoing
          echo "${OUTGOING}"
          
          echo "MATRIX: $(jq -r -c '.' <<< "$MATRIX")"          
          echo "INCOMING: $(jq -r -c '.' <<< "$INCOMING")"          
          echo "OUTGOING: $(jq -r -c '.' <<< "$OUTGOING")"          

          jq '.service' <<< "${INCOMING}"
          jq '.service' <<< "${OUTGOING}"

  result:
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - run:
          echo "Got to here"



#INCOMING: ${{ fromJSON(toJSON(matrix)).incoming }}
#OUTGOING: ${{ fromJSON(toJSON(matrix)).outgoing }}

#          echo "incoming: $(jq . <<< "${INCOMING}")"
#          echo "outgoing: $(jq . <<< "${OUTGOING}")"
#
#          if [ "$(jq '.service' <<< "${INCOMING}")" == "alpha" ]; then
#            exit 0
#          else
#            exit 1
#          fi
