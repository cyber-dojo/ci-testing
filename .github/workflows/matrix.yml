name: Main

on:
  push:

jobs:

  setup:
    name: Generate Job Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate.outputs.matrix }}
    env:
      JSON: >-
        [
          {"service": "alpha"},
          {"service": "beta" }
        ]
    steps:
      - name: Generate matrix-include
        id: generate
        run: |
          jq . <<< "${JSON}"
          echo "matrix=$(jq -r -c . <<< "${JSON}")" >> ${GITHUB_OUTPUT}

  deploy:
    needs: [setup]
    name: Check
    runs-on: ubuntu-latest
    if: needs.setup.outputs.matrix != ''
    strategy:
      matrix:
        include: ${{ fromJSON(needs.setup.outputs.matrix) }}
    env:
      MATRIX: ${{ toJSON(matrix) }}
    steps:
      - run:
          echo "${MATRIX}"


  result:
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - run:
          echo "Got to here"



#      JSON: >-
#        [
#          {"incoming":{"service": "alpha"}, "outgoing":{"service": "xalpha"}},
#          {"incoming":{"service": "beta" }, "outgoing":{"service": "xalpha"}}
#        ]

#INCOMING: ${{ fromJSON(toJSON(matrix)).incoming }}
#OUTGOING: ${{ fromJSON(toJSON(matrix)).outgoing }}

#          echo "incoming: $(jq . <<< "${INCOMING}")"
#          echo "outgoing: $(jq . <<< "${OUTGOING}")"
#
#          if [ "$(jq '.service' <<< "${INCOMING}")" == "alpha" ]; then
#            exit 0
#          else
#            exit 1
#          fi
